@model List<Your_Ride.Models.FormFileLocationPics>

@{
    ViewData["Title"] = "Add Location Image";
}

<h2>Location Images</h2>

@if (Model == null || !Model.Any())
{
    <p class="alert alert-warning">No location found yet!</p>
}
else
{
    <div class="row">
        @foreach (var location in Model)
        {
            <div class="col-md-4">
                <div class="card mb-3">
                    <img src="@location.ImagePath" class="card-img-top" alt="Location Image" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@location.Location</h5>
                        <p class="card-text">Order: @location.LocationOrder</p>
                    </div>
                </div>
            </div>
        }
    </div>
}

<h3 class="mt-4">Add New Location Images</h3>

<form id="locationForm" asp-action="ConfirmAddLocationImage" method="post" enctype="multipart/form-data">
    <input type="hidden" name="id" value="@ViewBag.TimeID" />

    <div id="locationContainer">
        <div class="location-group">
            <div class="form-group">
                <label for="Location">Location Name</label>
                <input type="text" name="formFileLocationImageVMs[0].Location" class="form-control" required />
            </div>

            <div class="form-group">
                <label for="LocationOrder">Order</label>
                <input type="number" name="formFileLocationImageVMs[0].LocationOrder" class="form-control order-input" required />
                <small class="text-danger order-error"></small>
            </div>

            <div class="form-group">
                <label for="PathURL">Location URL (Optional)</label>
                <input type="text" name="formFileLocationImageVMs[0].PathURL" class="form-control" />
            </div>

            <div class="form-group">
                <label for="ImageFile">Upload Image</label>
                <input type="file" name="formFileLocationImageVMs[0].ImageFile" class="form-control"  />
            </div>
        </div>
    </div>

    <button type="button" id="addMoreLocations" class="btn btn-primary mt-2">Add Another Location</button>
    <button type="submit" class="btn btn-success mt-2">Submit Locations</button>
</form>

<script>
    let locationIndex = 1;
    let expectedOrder = 1;
    let timeId = @ViewBag.TimeID;

    // Fetch the next expected order from the server
    async function fetchNextOrder() {
        try {
            const response = await fetch(`/GetNextLocationOrder/${timeId}`);
            const data = await response.json();
            expectedOrder = data.expectedOrder;
        } catch (error) {
            console.error("Error fetching order:", error);
        }
    }

    fetchNextOrder(); // Call on page load

    document.getElementById("addMoreLocations").addEventListener("click", function () {
        const container = document.getElementById("locationContainer");
        const newGroup = document.createElement("div");
        newGroup.classList.add("location-group");
        newGroup.innerHTML = `
            <div class="form-group">
                <label>Location Name</label>
                <input type="text" name="formFileLocationImageVMs[${locationIndex}].Location" class="form-control" required />
            </div>
            <div class="form-group">
                <label>Order</label>
                <input type="number" name="formFileLocationImageVMs[${locationIndex}].LocationOrder" class="form-control order-input" required />
                <small class="text-danger order-error"></small>
            </div>
            <div class="form-group">
                <label>Location URL (Optional)</label>
                <input type="text" name="formFileLocationImageVMs[${locationIndex}].PathURL" class="form-control" />
            </div>
            <div class="form-group">
                <label>Upload Image</label>
                <input type="file" name="formFileLocationImageVMs[${locationIndex}].ImageFile" class="form-control"  />
            </div>
        `;
        container.appendChild(newGroup);
        locationIndex++;
    });

    document.getElementById("locationForm").addEventListener("submit", function (event) {
        const orderInputs = document.querySelectorAll(".order-input");
        let valid = true;
        let orders = [];

        orderInputs.forEach(input => {
            let orderValue = parseInt(input.value);
            orders.push(orderValue);
        });

        orders.sort((a, b) => a - b);

        for (let i = 0; i < orders.length; i++) {
            if (orders[i] !== expectedOrder + i) {
                valid = false;
                document.querySelectorAll(".order-error")[i].innerText = `Order must be ${expectedOrder + i}`;
            } else {
                document.querySelectorAll(".order-error")[i].innerText = "";
            }
        }

        if (!valid) {
            event.preventDefault();
        }
    });
</script>
